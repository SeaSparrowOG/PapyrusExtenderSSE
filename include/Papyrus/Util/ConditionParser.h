#pragma once

namespace RE
{
	bool operator==(const CONDITION_ITEM_DATA& a_this, const CONDITION_ITEM_DATA& a_data);
}

namespace CONDITION
{
	using FUNC_ID = RE::FUNCTION_DATA::FunctionID;
	using COND_OBJECT = RE::CONDITIONITEMOBJECT;
	using OP_CODE = RE::CONDITION_ITEM_DATA::OpCode;

	using PARAM_TYPE = RE::SCRIPT_PARAM_TYPE;
	using PARAM_TYPES = std::pair<std::optional<RE::SCRIPT_PARAM_TYPE>, std::optional<RE::SCRIPT_PARAM_TYPE>>;

	namespace map
	{
		inline constexpr frozen::bidirectional_map<std::uint32_t, std::string_view, 402> funcIDs = {
			{ 0, "GetWantBlocking"sv },
			{ 1, "GetDistance"sv },
			{ 5, "GetLocked"sv },
			{ 6, "GetPos"sv },
			{ 8, "GetAngle"sv },
			{ 10, "GetStartingPos"sv },
			{ 11, "GetStartingAngle"sv },
			{ 12, "GetSecondsPassed"sv },
			{ 14, "GetActorValue"sv },
			{ 18, "GetCurrentTime"sv },
			{ 24, "GetScale"sv },
			{ 25, "IsMoving"sv },
			{ 26, "IsTurning"sv },
			{ 27, "GetLineOfSight"sv },
			{ 32, "GetInSameCell"sv },
			{ 35, "GetDisabled"sv },
			{ 36, "MenuMode"sv },
			{ 39, "GetDisease"sv },
			{ 41, "GetClothingValue"sv },
			{ 42, "SameFaction"sv },
			{ 43, "SameRace"sv },
			{ 44, "SameSex"sv },
			{ 45, "GetDetected"sv },
			{ 46, "GetDead"sv },
			{ 47, "GetItemCount"sv },
			{ 48, "GetGold"sv },
			{ 49, "GetSleeping"sv },
			{ 50, "GetTalkedToPC"sv },
			{ 53, "GetScriptVariable"sv },
			{ 56, "GetQuestRunning"sv },
			{ 58, "GetStage"sv },
			{ 59, "GetStageDone"sv },
			{ 60, "GetFactionRankDifference"sv },
			{ 61, "GetAlarmed"sv },
			{ 62, "IsRaining"sv },
			{ 63, "GetAttacked"sv },
			{ 64, "GetIsCreature"sv },
			{ 65, "GetLockLevel"sv },
			{ 66, "GetShouldAttack"sv },
			{ 67, "GetInCell"sv },
			{ 68, "GetIsClass"sv },
			{ 69, "GetIsRace"sv },
			{ 70, "GetIsSex"sv },
			{ 71, "GetInFaction"sv },
			{ 72, "GetIsID"sv },
			{ 73, "GetFactionRank"sv },
			{ 74, "GetGlobalValue"sv },
			{ 75, "IsSnowing"sv },
			{ 77, "GetRandomPercent"sv },
			{ 79, "GetQuestVariable"sv },
			{ 80, "GetLevel"sv },
			{ 81, "IsRotating"sv },
			{ 84, "GetDeadCount"sv },
			{ 91, "GetIsAlerted"sv },
			{ 98, "GetPlayerControlsDisabled"sv },
			{ 99, "GetHeadingAngle"sv },
			{ 101, "IsWeaponMagicOut"sv },
			{ 102, "IsTorchOut"sv },
			{ 103, "IsShieldOut"sv },
			{ 106, "IsFacingUp"sv },
			{ 107, "GetKnockedState"sv },
			{ 108, "GetWeaponAnimType"sv },
			{ 109, "IsWeaponSkillType"sv },
			{ 110, "GetCurrentAIPackage"sv },
			{ 111, "IsWaiting"sv },
			{ 112, "IsIdlePlaying"sv },
			{ 116, "IsIntimidatedbyPlayer"sv },
			{ 117, "IsPlayerInRegion"sv },
			{ 118, "GetActorAggroRadiusViolated"sv },
			{ 122, "GetCrime"sv },
			{ 123, "IsGreetingPlayer"sv },
			{ 125, "IsGuard"sv },
			{ 127, "HasBeenEaten"sv },
			{ 128, "GetStaminaPercentage"sv },
			{ 129, "GetPCIsClass"sv },
			{ 130, "GetPCIsRace"sv },
			{ 131, "GetPCIsSex"sv },
			{ 132, "GetPCInFaction"sv },
			{ 133, "SameFactionAsPC"sv },
			{ 134, "SameRaceAsPC"sv },
			{ 135, "SameSexAsPC"sv },
			{ 136, "GetIsReference"sv },
			{ 141, "IsTalking"sv },
			{ 142, "GetWalkSpeed"sv },
			{ 143, "GetCurrentAIProcedure"sv },
			{ 144, "GetTrespassWarningLevel"sv },
			{ 145, "IsTrespassing"sv },
			{ 146, "IsInMyOwnedCell"sv },
			{ 147, "GetWindSpeed"sv },
			{ 148, "GetCurrentWeatherPercent"sv },
			{ 149, "GetIsCurrentWeather"sv },
			{ 150, "IsContinuingPackagePCNear"sv },
			{ 152, "GetIsCrimeFaction"sv },
			{ 153, "CanHaveFlames"sv },
			{ 154, "HasFlames"sv },
			{ 157, "GetOpenState"sv },
			{ 159, "GetSitting"sv },
			{ 161, "GetIsCurrentPackage"sv },
			{ 162, "IsCurrentFurnitureRef"sv },
			{ 163, "IsCurrentFurnitureObj"sv },
			{ 170, "GetDayOfWeek"sv },
			{ 172, "GetTalkedToPCParam"sv },
			{ 175, "IsPCSleeping"sv },
			{ 176, "IsPCAMurderer"sv },
			{ 180, "HasSameEditorLocAsRef"sv },
			{ 181, "HasSameEditorLocAsRefAlias"sv },
			{ 182, "GetEquipped"sv },
			{ 185, "IsSwimming"sv },
			{ 190, "GetAmountSoldStolen"sv },
			{ 192, "GetIgnoreCrime"sv },
			{ 193, "GetPCExpelled"sv },
			{ 195, "GetPCFactionMurder"sv },
			{ 197, "GetPCEnemyofFaction"sv },
			{ 199, "GetPCFactionAttack"sv },
			{ 203, "GetDestroyed"sv },
			{ 214, "HasMagicEffect"sv },
			{ 215, "GetDefaultOpen"sv },
			{ 219, "GetAnimAction"sv },
			{ 223, "IsSpellTarget"sv },
			{ 224, "GetVATSMode"sv },
			{ 225, "GetPersuasionNumber"sv },
			{ 226, "GetVampireFeed"sv },
			{ 227, "GetCannibal"sv },
			{ 228, "GetIsClassDefault"sv },
			{ 229, "GetClassDefaultMatch"sv },
			{ 230, "GetInCellParam"sv },
			{ 235, "GetVatsTargetHeight"sv },
			{ 237, "GetIsGhost"sv },
			{ 242, "GetUnconscious"sv },
			{ 244, "GetRestrained"sv },
			{ 246, "GetIsUsedItem"sv },
			{ 247, "GetIsUsedItemType"sv },
			{ 248, "IsScenePlaying"sv },
			{ 249, "IsInDialogueWithPlayer"sv },
			{ 250, "GetLocationCleared"sv },
			{ 254, "GetIsPlayableRace"sv },
			{ 255, "GetOffersServicesNow"sv },
			{ 258, "HasAssociationType"sv },
			{ 259, "HasFamilyRelationship"sv },
			{ 261, "HasParentRelationship"sv },
			{ 262, "IsWarningAbout"sv },
			{ 263, "IsWeaponOut"sv },
			{ 264, "HasSpell"sv },
			{ 265, "IsTimePassing"sv },
			{ 266, "IsPleasant"sv },
			{ 267, "IsCloudy"sv },
			{ 274, "IsSmallBump"sv },
			{ 277, "GetBaseActorValue"sv },
			{ 278, "IsOwner"sv },
			{ 280, "IsCellOwner"sv },
			{ 282, "IsHorseStolen"sv },
			{ 285, "IsLeftUp"sv },
			{ 286, "IsSneaking"sv },
			{ 287, "IsRunning"sv },
			{ 288, "GetFriendHit"sv },
			{ 289, "IsInCombat"sv },
			{ 300, "IsInInterior"sv },
			{ 304, "IsWaterObject"sv },
			{ 305, "GetPlayerAction"sv },
			{ 306, "IsActorUsingATorch"sv },
			{ 309, "IsXBox"sv },
			{ 310, "GetInWorldspace"sv },
			{ 312, "GetPCMiscStat"sv },
			{ 313, "GetPairedAnimation"sv },
			{ 314, "IsActorAVictim"sv },
			{ 315, "GetTotalPersuasionNumber"sv },
			{ 318, "GetIdleDoneOnce"sv },
			{ 320, "GetNoRumors"sv },
			{ 323, "GetCombatState"sv },
			{ 325, "GetWithinPackageLocation"sv },
			{ 327, "IsRidingMount"sv },
			{ 329, "IsFleeing"sv },
			{ 332, "IsInDangerousWater"sv },
			{ 338, "GetIgnoreFriendlyHits"sv },
			{ 339, "IsPlayersLastRiddenMount"sv },
			{ 353, "IsActor"sv },
			{ 354, "IsEssential"sv },
			{ 358, "IsPlayerMovingIntoNewSpace"sv },
			{ 359, "GetInCurrentLoc"sv },
			{ 360, "GetInCurrentLocAlias"sv },
			{ 361, "GetTimeDead"sv },
			{ 362, "HasLinkedRef"sv },
			{ 365, "IsChild"sv },
			{ 366, "GetStolenItemValueNoCrime"sv },
			{ 367, "GetLastPlayerAction"sv },
			{ 368, "IsPlayerActionActive"sv },
			{ 370, "IsTalkingActivatorActor"sv },
			{ 372, "IsInList"sv },
			{ 373, "GetStolenItemValue"sv },
			{ 375, "GetCrimeGoldViolent"sv },
			{ 376, "GetCrimeGoldNonviolent"sv },
			{ 378, "HasShout"sv },
			{ 381, "GetHasNote"sv },
			{ 390, "GetHitLocation"sv },
			{ 391, "IsPC1stPerson"sv },
			{ 396, "GetCauseofDeath"sv },
			{ 397, "IsLimbGone"sv },
			{ 398, "IsWeaponInList"sv },
			{ 402, "IsBribedbyPlayer"sv },
			{ 403, "GetRelationshipRank"sv },
			{ 407, "GetVATSValue"sv },
			{ 408, "IsKiller"sv },
			{ 409, "IsKillerObject"sv },
			{ 410, "GetFactionCombatReaction"sv },
			{ 414, "Exists"sv },
			{ 415, "GetGroupMemberCount"sv },
			{ 416, "GetGroupTargetCount"sv },
			{ 426, "GetIsVoiceType"sv },
			{ 427, "GetPlantedExplosive"sv },
			{ 429, "IsScenePackageRunning"sv },
			{ 430, "GetHealthPercentage"sv },
			{ 432, "GetIsObjectType"sv },
			{ 434, "GetDialogueEmotion"sv },
			{ 435, "GetDialogueEmotionValue"sv },
			{ 437, "GetIsCreatureType"sv },
			{ 444, "GetInCurrentLocFormList"sv },
			{ 445, "GetInZone"sv },
			{ 446, "GetVelocity"sv },
			{ 447, "GetGraphVariableFloat"sv },
			{ 448, "HasPerk"sv },
			{ 449, "GetFactionRelation"sv },
			{ 450, "IsLastIdlePlayed"sv },
			{ 453, "GetPlayerTeammate"sv },
			{ 454, "GetPlayerTeammateCount"sv },
			{ 458, "GetActorCrimePlayerEnemy"sv },
			{ 459, "GetCrimeGold"sv },
			{ 463, "IsPlayerGrabbedRef"sv },
			{ 465, "GetKeywordItemCount"sv },
			{ 470, "GetDestructionStage"sv },
			{ 473, "GetIsAlignment"sv },
			{ 476, "IsProtected"sv },
			{ 477, "GetThreatRatio"sv },
			{ 479, "GetIsUsedItemEquipType"sv },
			{ 487, "IsCarryable"sv },
			{ 488, "GetConcussed"sv },
			{ 491, "GetMapMarkerVisible"sv },
			{ 493, "PlayerKnows"sv },
			{ 494, "GetPermanentActorValue"sv },
			{ 495, "GetKillingBlowLimb"sv },
			{ 497, "CanPayCrimeGold"sv },
			{ 499, "GetDaysInJail"sv },
			{ 500, "EPAlchemyGetMakingPoison"sv },
			{ 501, "EPAlchemyEffectHasKeyword"sv },
			{ 503, "GetAllowWorldInteractions"sv },
			{ 508, "GetLastHitCritical"sv },
			{ 513, "IsCombatTarget"sv },
			{ 515, "GetVATSRightAreaFree"sv },
			{ 516, "GetVATSLeftAreaFree"sv },
			{ 517, "GetVATSBackAreaFree"sv },
			{ 518, "GetVATSFrontAreaFree"sv },
			{ 519, "GetLockIsBroken"sv },
			{ 520, "IsPS3"sv },
			{ 521, "IsWin32"sv },
			{ 522, "GetVATSRightTargetVisible"sv },
			{ 523, "GetVATSLeftTargetVisible"sv },
			{ 524, "GetVATSBackTargetVisible"sv },
			{ 525, "GetVATSFrontTargetVisible"sv },
			{ 528, "IsInCriticalStage"sv },
			{ 530, "GetXPForNextLevel"sv },
			{ 533, "GetInfamy"sv },
			{ 534, "GetInfamyViolent"sv },
			{ 535, "GetInfamyNonViolent"sv },
			{ 543, "GetQuestCompleted"sv },
			{ 547, "IsGoreDisabled"sv },
			{ 550, "IsSceneActionComplete"sv },
			{ 552, "GetSpellUsageNum"sv },
			{ 554, "GetActorsInHigh"sv },
			{ 555, "HasLoaded3D"sv },
			{ 560, "HasKeyword"sv },
			{ 561, "HasRefType"sv },
			{ 562, "LocationHasKeyword"sv },
			{ 563, "LocationHasRefType"sv },
			{ 565, "GetIsEditorLocation"sv },
			{ 566, "GetIsAliasRef"sv },
			{ 567, "GetIsEditorLocAlias"sv },
			{ 568, "IsSprinting"sv },
			{ 569, "IsBlocking"sv },
			{ 570, "HasEquippedSpell"sv },
			{ 571, "GetCurrentCastingType"sv },
			{ 572, "GetCurrentDeliveryType"sv },
			{ 574, "GetAttackState"sv },
			{ 576, "GetEventData"sv },
			{ 577, "IsCloserToAThanB"sv },
			{ 579, "GetEquippedShout"sv },
			{ 580, "IsBleedingOut"sv },
			{ 584, "GetRelativeAngle"sv },
			{ 589, "GetMovementDirection"sv },
			{ 590, "IsInScene"sv },
			{ 591, "GetRefTypeDeadCount"sv },
			{ 592, "GetRefTypeAliveCount"sv },
			{ 594, "GetIsFlying"sv },
			{ 595, "IsCurrentSpell"sv },
			{ 596, "SpellHasKeyword"sv },
			{ 597, "GetEquippedItemType"sv },
			{ 598, "GetLocationAliasCleared"sv },
			{ 600, "GetLocAliasRefTypeDeadCount"sv },
			{ 601, "GetLocAliasRefTypeAliveCount"sv },
			{ 602, "IsWardState"sv },
			{ 603, "IsInSameCurrentLocAsRef"sv },
			{ 604, "IsInSameCurrentLocAsRefAlias"sv },
			{ 605, "LocAliasIsLocation"sv },
			{ 606, "GetKeywordDataForLocation"sv },
			{ 608, "GetKeywordDataForAlias"sv },
			{ 610, "LocAliasHasKeyword"sv },
			{ 611, "IsNullPackageData"sv },
			{ 612, "GetNumericPackageData"sv },
			{ 613, "IsFurnitureAnimType"sv },
			{ 614, "IsFurnitureEntryType"sv },
			{ 615, "GetHighestRelationshipRank"sv },
			{ 616, "GetLowestRelationshipRank"sv },
			{ 617, "HasAssociationTypeAny"sv },
			{ 618, "HasFamilyRelationshipAny"sv },
			{ 619, "GetPathingTargetOffset"sv },
			{ 620, "GetPathingTargetAngleOffset"sv },
			{ 621, "GetPathingTargetSpeed"sv },
			{ 622, "GetPathingTargetSpeedAngle"sv },
			{ 623, "GetMovementSpeed"sv },
			{ 624, "GetInContainer"sv },
			{ 625, "IsLocationLoaded"sv },
			{ 626, "IsLocAliasLoaded"sv },
			{ 627, "IsDualCasting"sv },
			{ 629, "GetVMQuestVariable"sv },
			{ 630, "GetVMScriptVariable"sv },
			{ 631, "IsEnteringInteractionQuick"sv },
			{ 632, "IsCasting"sv },
			{ 633, "GetFlyingState"sv },
			{ 635, "IsInFavorState"sv },
			{ 636, "HasTwoHandedWeaponEquipped"sv },
			{ 637, "IsExitingInstant"sv },
			{ 638, "IsInFriendStateWithPlayer"sv },
			{ 639, "GetWithinDistance"sv },
			{ 640, "GetActorValuePercent"sv },
			{ 641, "IsUnique"sv },
			{ 642, "GetLastBumpDirection"sv },
			{ 644, "IsInFurnitureState"sv },
			{ 645, "GetIsInjured"sv },
			{ 646, "GetIsCrashLandRequest"sv },
			{ 647, "GetIsHastyLandRequest"sv },
			{ 650, "IsLinkedTo"sv },
			{ 651, "GetKeywordDataForCurrentLocation"sv },
			{ 652, "GetInSharedCrimeFaction"sv },
			{ 654, "GetBribeSuccess"sv },
			{ 655, "GetIntimidateSuccess"sv },
			{ 656, "GetArrestedState"sv },
			{ 657, "GetArrestingActor"sv },
			{ 659, "EPTemperingItemIsEnchanted"sv },
			{ 660, "EPTemperingItemHasKeyword"sv },
			{ 664, "GetReplacedItemType"sv },
			{ 672, "IsAttacking"sv },
			{ 673, "IsPowerAttacking"sv },
			{ 674, "IsLastHostileActor"sv },
			{ 675, "GetGraphVariableInt"sv },
			{ 676, "GetCurrentShoutVariation"sv },
			{ 678, "ShouldAttackKill"sv },
			{ 680, "GetActivatorHeight"sv },
			{ 681, "EPMagic_IsAdvanceSkill"sv },
			{ 682, "WornHasKeyword"sv },
			{ 683, "GetPathingCurrentSpeed"sv },
			{ 684, "GetPathingCurrentSpeedAngle"sv },
			{ 691, "EPModSkillUsage_AdvanceObjectHasKeyword"sv },
			{ 692, "EPModSkillUsage_IsAdvanceAction"sv },
			{ 693, "EPMagic_SpellHasKeyword"sv },
			{ 694, "GetNoBleedoutRecovery"sv },
			{ 696, "EPMagic_SpellHasSkill"sv },
			{ 697, "IsAttackType"sv },
			{ 698, "IsAllowedToFly"sv },
			{ 699, "HasMagicEffectKeyword"sv },
			{ 700, "IsCommandedActor"sv },
			{ 701, "IsStaggered"sv },
			{ 702, "IsRecoiling"sv },
			{ 703, "IsExitingInteractionQuick"sv },
			{ 704, "IsPathing"sv },
			{ 705, "GetShouldHelp"sv },
			{ 706, "HasBoundWeaponEquipped"sv },
			{ 707, "GetCombatTargetHasKeyword"sv },
			{ 709, "GetCombatGroupMemberCount"sv },
			{ 710, "IsIgnoringCombat"sv },
			{ 711, "GetLightLevel"sv },
			{ 713, "SpellHasCastingPerk"sv },
			{ 714, "IsBeingRidden"sv },
			{ 715, "IsUndead"sv },
			{ 716, "GetRealHoursPassed"sv },
			{ 718, "IsUnlockedDoor"sv },
			{ 719, "IsHostileToActor"sv },
			{ 720, "GetTargetHeight"sv },
			{ 721, "IsPoison"sv },
			{ 722, "WornApparelHasKeywordCount"sv },
			{ 723, "GetItemHealthPercent"sv },
			{ 724, "EffectWasDualCast"sv },
			{ 725, "GetKnockedStateEnum"sv },
			{ 726, "DoesNotExist"sv },
			{ 730, "IsOnFlyingMount"sv },
			{ 731, "CanFlyHere"sv },
			{ 732, "IsFlyingMountPatrolQueud"sv },
			{ 733, "IsFlyingMountFastTravelling"sv },
			{ 734, "IsOverEncumbered"sv },
			{ 735, "GetActorWarmth"sv },
			{ 1024, "GetSKSEVersion"sv },
			{ 1025, "GetSKSEVersionMinor"sv },
			{ 1026, "GetSKSEVersionBeta"sv },
			{ 1027, "GetSKSERelease"sv },
			{ 1028, "ClearInvalidRegistrations"sv },
		};

		inline constexpr frozen::bidirectional_map<std::uint32_t, std::string_view, 9> conditionObjs = {
			{ 0, "Subject"sv },
			{ 1, "Target"sv },
			{ 2, "Reference"sv },
			{ 3, "Combat Target"sv },
			{ 4, "Linked Reference"sv },
			{ 5, "Quest Alias"sv },
			{ 6, "Package Data"sv },
			{ 7, "Event Data"sv },
			{ 8, "Player"sv }
		};

		inline constexpr frozen::bidirectional_map<std::uint32_t, std::string_view, 6> opCodes = {
			{ 0, "=="sv },
			{ 1, "!="sv },
			{ 2, ">"sv },
			{ 3, ">="sv },
			{ 4, "<"sv },
			{ 5, "<="sv }
		};

		template <class T>
		std::optional<T> get_value(const std::string& a_str)
		{
			if (string::is_only_digit(a_str)) {
				return string::to_num<T>(a_str);
			} else {
				constexpr auto get_result = [](const std::string& str) {
					if (std::is_same_v<COND_OBJECT, T>) {
						return conditionObjs.find(str);
					} else if (std::is_same_v<FUNC_ID, T>) {
						return funcIDs.find(str);
					} else {
						return opCodes.find(str);
					}
				};
				const auto result = get_result(a_str);
				return result ? std::make_optional(static_cast<T>(*result)) : std::nullopt;
			}
		}
	}

	struct PARAM
	{
		enum class STATE
		{
			kInvalid = -1,
			kNull,
			kValid
		};

		static STATE GetParamState(std::optional<PARAM_TYPE> a_paramType);
		PARAM(std::optional<PARAM_TYPE> a_type, void* a_param);
		PARAM(std::optional<PARAM_TYPE> a_type, const std::string& a_param);

		bool        IsValid() const;
		std::string ToString();

		// members
		std::optional<PARAM_TYPE> type;
		STATE                     state;

		union
		{
			char*        c;
			std::int32_t i;
			float        f;
			RE::TESForm* ptr;
		} data;
	};

	RE::TESCondition* GetConditions(RE::TESForm& a_form, std::uint32_t a_index);

	std::vector<RE::CONDITION_ITEM_DATA> ParseConditionList(const std::vector<std::string>& a_conditionList);
	std::vector<std::string>             BuildConditionList(const RE::TESCondition* a_conditions);
}
